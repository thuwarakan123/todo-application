# version: '3.8'

# services:
#   db:
#     image: postgres:13-alpine
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: thuwa@123
#       POSTGRES_DB: todo_db
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"

#   backend:
#     build: ./backend
#     environment:
#       PORT: 3000
#       DB_HOST: db
#       DB_PORT: 5432
#       DB_USER: postgres
#       DB_PASSWORD: thuwa@123
#       DB_NAME: todo_db
#       JWT_SECRET: fbfc347d22378a624ec5defe36e4377d419107dc085c9b0c3db29c55be7ff9bce9d1e1f9217bed41834664b04106780c54d0c4b85ac7328017647ebe64109243
#     ports:
#       - "3000:3000"
#     depends_on:
#       - db

# volumes:
#   db_data:

version: '3.8'

services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: thuwa@123
      POSTGRES_DB: todo_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    volumes:
      - ./backend:/usr/src/app    
      - /usr/src/app/node_modules/  
    environment:
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: thuwa@123
      DB_NAME: todo_db
      JWT_SECRET: fbfc347d22378a624ec5defe36e4377d419107dc085c9b0c3db29c55be7ff9bce9d1e1f9217bed41834664b04106780c54d0c4b85ac7328017647ebe64109243
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_PORT=5173
      - CHOKIDAR_USEPOLLING=true  # Fix for file changes inside Docker
    depends_on:
      - backend
    command: ["npm", "run", "dev"]

volumes:
  db_data:
